// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using World;

#nullable disable

namespace World.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221109141137_AddContinentsAndRegionsTables")]
    partial class AddContinentsAndRegionsTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("World.Models.Continent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ArabicName");

                    b.Property<string>("EName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EnglishName");

                    b.HasKey("Id");

                    b.ToTable("Contients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cca4de6f-f1d9-4740-a864-03b64b28cbc8"),
                            EName = "Asia"
                        },
                        new
                        {
                            Id = new Guid("cb5bad9a-e1dd-4900-9fde-cf20ccd4eb34"),
                            EName = "Africa"
                        },
                        new
                        {
                            Id = new Guid("f5e9e8ca-de19-45bb-9822-2ddff7de5b0f"),
                            EName = "Europe"
                        },
                        new
                        {
                            Id = new Guid("5b7225da-91c9-4ee4-a729-f0d1fa46f1d6"),
                            EName = "North America"
                        },
                        new
                        {
                            Id = new Guid("1a6f2ced-1b4f-448f-bea6-f74e4cf8fe82"),
                            EName = "South America"
                        },
                        new
                        {
                            Id = new Guid("14662d97-d646-4cbc-84d5-32af5fa4f546"),
                            EName = "Australia"
                        },
                        new
                        {
                            Id = new Guid("dee90bd7-37fd-4259-95ed-5245a141fc42"),
                            EName = "Antarctica"
                        },
                        new
                        {
                            Id = new Guid("961a9641-ceb5-47c6-8a3f-2abfcfa40c8c"),
                            EName = "Asia"
                        },
                        new
                        {
                            Id = new Guid("1065e50c-a58e-4754-8913-7bc597688f7b"),
                            EName = "Africa"
                        },
                        new
                        {
                            Id = new Guid("9ce69735-d0fe-4f50-8acd-667f4c63a004"),
                            EName = "Europe"
                        },
                        new
                        {
                            Id = new Guid("39068c65-00b9-4da6-a907-522a2843974d"),
                            EName = "North America"
                        },
                        new
                        {
                            Id = new Guid("e24734c6-6c2a-470b-89c5-80d6d6ef6bdd"),
                            EName = "South America"
                        },
                        new
                        {
                            Id = new Guid("5a89f017-d61c-4754-aa8c-3e47a30694db"),
                            EName = "Australia"
                        },
                        new
                        {
                            Id = new Guid("9859abe8-7101-4895-a9ec-9f0f8f6d4182"),
                            EName = "Antarctica"
                        });
                });

            modelBuilder.Entity("World.Models.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ArabicName");

                    b.Property<Guid>("ContientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EnglishName");

                    b.HasKey("Id");

                    b.HasIndex("ContientId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("World.Models.Region", b =>
                {
                    b.HasOne("World.Models.Continent", "Contient")
                        .WithMany("Regions")
                        .HasForeignKey("ContientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contient");
                });

            modelBuilder.Entity("World.Models.Continent", b =>
                {
                    b.Navigation("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
